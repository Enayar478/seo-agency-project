---
interface Props {
  currentPage: number;
  totalPages: number;
  baseUrl: string;
}

const { currentPage, totalPages, baseUrl } = Astro.props;

// Générer la liste des pages à afficher
const getPageNumbers = () => {
  const pages: (number | string)[] = [];
  
  // Toujours afficher la première page
  pages.push(1);
  
  // Ajouter les pages autour de la page courante
  for (let i = Math.max(2, currentPage - 1); i <= Math.min(totalPages - 1, currentPage + 1); i++) {
    if (i === 2 && currentPage > 3) {
      pages.push('...');
    }
    pages.push(i);
    if (i === totalPages - 1 && currentPage < totalPages - 2) {
      pages.push('...');
    }
  }
  
  // Toujours afficher la dernière page si elle existe
  if (totalPages > 1) {
    pages.push(totalPages);
  }
  
  return pages;
};

const pages = getPageNumbers();
---

<nav aria-label="Pagination" class="flex justify-center items-center space-x-2 animate-fade-in">
  <!-- Bouton précédent -->
  <a
    href={currentPage === 2 ? baseUrl : `${baseUrl}/page/${currentPage - 1}`}
    class:list={[
      "inline-flex items-center px-3 py-2 rounded-lg text-sm font-medium transition-all duration-300",
      currentPage === 1
        ? "opacity-50 cursor-not-allowed bg-gray-100 text-gray-400 dark:bg-gray-800 dark:text-gray-600"
        : "text-gray-600 hover:text-primary-600 dark:text-gray-400 dark:hover:text-primary-400 hover:bg-primary-500/10"
    ]}
    aria-disabled={currentPage === 1}
    tabindex={currentPage === 1 ? -1 : undefined}
  >
    <svg class="w-5 h-5 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
    </svg>
    <span class="hidden sm:inline">Précédent</span>
  </a>

  <!-- Pages -->
  <div class="hidden sm:flex items-center space-x-1">
    {pages.map((page, index) => 
      typeof page === 'number' ? (
        <a
          href={page === 1 ? baseUrl : `${baseUrl}/page/${page}`}
          class:list={[
            "inline-flex items-center justify-center w-8 h-8 rounded-lg text-sm font-medium transition-all duration-300",
            currentPage === page
              ? "bg-primary-500/10 text-primary-600 dark:text-primary-400"
              : "text-gray-600 hover:text-primary-600 dark:text-gray-400 dark:hover:text-primary-400 hover:bg-primary-500/10"
          ]}
          aria-current={currentPage === page ? 'page' : undefined}
        >
          {page}
        </a>
      ) : (
        <span class="px-2 text-gray-400 dark:text-gray-600">...</span>
      )
    )}
  </div>

  <!-- Indicateur mobile -->
  <span class="sm:hidden text-sm text-gray-600 dark:text-gray-400">
    Page {currentPage} sur {totalPages}
  </span>

  <!-- Bouton suivant -->
  <a
    href={`${baseUrl}/page/${currentPage + 1}`}
    class:list={[
      "inline-flex items-center px-3 py-2 rounded-lg text-sm font-medium transition-all duration-300",
      currentPage === totalPages
        ? "opacity-50 cursor-not-allowed bg-gray-100 text-gray-400 dark:bg-gray-800 dark:text-gray-600"
        : "text-gray-600 hover:text-primary-600 dark:text-gray-400 dark:hover:text-primary-400 hover:bg-primary-500/10"
    ]}
    aria-disabled={currentPage === totalPages}
    tabindex={currentPage === totalPages ? -1 : undefined}
  >
    <span class="hidden sm:inline">Suivant</span>
    <svg class="w-5 h-5 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
    </svg>
  </a>
</nav> 