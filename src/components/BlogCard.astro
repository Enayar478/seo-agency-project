---
interface Props {
  title: string;
  description: string;
  url: string;
  readingTime: number;
  category: string;
  categoryUrl: string;
}

const { title, description, url, readingTime, category, categoryUrl } = Astro.props;
---

<article class="group relative overflow-hidden rounded-card shadow-lg hover:shadow-xl transition-all duration-500 animate-fade-in">
  <div class="absolute inset-0 bg-gradient-to-br from-primary-600/90 to-secondary-600/90 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
  
  <a href={url} class="block">
    <div class="relative p-card-padding bg-white dark:bg-gray-800 flex flex-col min-h-[320px] group-hover:transform group-hover:scale-[1.02] transition-transform duration-500">
      <div>
        <div class="flex items-center justify-between mb-6">
          <a 
            href={categoryUrl}
            class="inline-flex px-3 py-1 rounded-full text-sm font-medium bg-primary-100 dark:bg-primary-900 text-primary-600 dark:text-primary-300 hover:bg-primary-200 dark:hover:bg-primary-800 transition-colors"
          >
            {category}
          </a>
          <div class="flex items-center text-gray-500 dark:text-gray-400">
            <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
            <span class="text-sm">{readingTime} min</span>
          </div>
        </div>
        
        <h2 class="text-xl font-bold text-gray-900 dark:text-white mb-4 group-hover:text-white transition-colors duration-500 line-clamp-2">
          {title}
        </h2>
        
        <p class="text-gray-600 dark:text-gray-300 group-hover:text-white/90 transition-colors duration-500 line-clamp-3">
          {description}
        </p>
      </div>
      
      <div class="flex items-center mt-6 text-primary-600 dark:text-primary-400 group-hover:text-white font-medium transition-colors duration-500">
        <span>Lire l'article</span>
        <svg class="w-5 h-5 ml-2 transform group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
        </svg>
      </div>
    </div>
  </a>
</article>

<script define:vars={{ title, description, category, url }}>
  // Schema.org article
  const schema = {
    '@context': 'https://schema.org',
    '@type': 'BlogPosting',
    'headline': title,
    'description': description,
    'articleSection': category,
    'url': new URL(url, Astro.site).href
  };

  const script = document.createElement('script');
  script.setAttribute('type', 'application/ld+json');
  script.textContent = JSON.stringify(schema);
  document.head.appendChild(script);
</script> 